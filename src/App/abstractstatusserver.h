/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_ABSTRACTSTATUSSERVER_H_
#define JSONRPC_CPP_STUB_ABSTRACTSTATUSSERVER_H_

#include <jsonrpccpp/server.h>

class AbstractStatusServer : public jsonrpc::AbstractServer<AbstractStatusServer> {
 public:
  AbstractStatusServer(jsonrpc::AbstractServerConnector &conn,
                       jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<
      AbstractStatusServer>(conn, type) {
    this->bindAndAddMethod(jsonrpc::Procedure("attest", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_STRING, NULL),
                           &AbstractStatusServer::attestI);
    this->bindAndAddMethod(jsonrpc::Procedure("status", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_OBJECT, NULL),
                           &AbstractStatusServer::statusI);
  }

  inline virtual void attestI(const Json::Value &request, Json::Value &response) {
    (void) request;
    response = this->attest();
  }
  inline virtual void statusI(const Json::Value &request, Json::Value &response) {
    (void) request;
    response = this->status();
  }
  virtual std::string attest() = 0;
  virtual Json::Value status() = 0;
};

#endif //JSONRPC_CPP_STUB_ABSTRACTSTATUSSERVER_H_
